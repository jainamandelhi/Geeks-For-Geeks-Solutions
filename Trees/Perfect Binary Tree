int fun(Node *root)
{   
    int ans=1;
    if(!root)
        return 0;
    ans+=fun(root->left);
    return ans;
}
bool dfs(Node *root,int depth,int dep)
{
    if(!root)
        return 1;
    if(root->left && !root->right)
        return 0;
    if(root->right && !root->left)
        return 0;
    if(!root->left && !root->right)
        return depth==dep+1;
    return (dfs(root->left,depth,dep+1) && dfs(root->right,depth,dep+1));
}
bool isPerfectRec(struct Node* root, int d, int level )
{
    int depth=fun(root);
   // cout<<depth<<" ";
    return dfs(root,depth,0);
// Your code goes here
}
